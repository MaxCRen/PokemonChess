### Starting build.
# Target: main.mli.depends, tags: { package(ANSITerminal), package(yojson), extension:mli, file:main.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package yojson -package ANSITerminal -modules main.mli > main.mli.depends # cached
# Target: main.cmi, tags: { package(ANSITerminal), package(yojson), byte, compile, extension:mli, file:main.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package yojson -package ANSITerminal -o main.cmi main.mli # cached
# Target: main.ml.depends, tags: { package(ANSITerminal), package(yojson), extension:ml, file:main.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package yojson -package ANSITerminal -modules main.ml > main.ml.depends
# Target: battle.mli.depends, tags: { package(ANSITerminal), package(yojson), extension:mli, file:battle.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package yojson -package ANSITerminal -modules battle.mli > battle.mli.depends # cached
# Target: moves.mli.depends, tags: { package(ANSITerminal), package(yojson), extension:mli, file:moves.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package yojson -package ANSITerminal -modules moves.mli > moves.mli.depends # cached
# Target: ptype.mli.depends, tags: { package(ANSITerminal), package(yojson), extension:mli, file:ptype.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package yojson -package ANSITerminal -modules ptype.mli > ptype.mli.depends # cached
# Target: ptype.cmi, tags: { package(ANSITerminal), package(yojson), byte, compile, extension:mli, file:ptype.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package yojson -package ANSITerminal -o ptype.cmi ptype.mli # cached
# Target: moves.cmi, tags: { package(ANSITerminal), package(yojson), byte, compile, extension:mli, file:moves.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package yojson -package ANSITerminal -o moves.cmi moves.mli # cached
# Target: pokemon.mli.depends, tags: { package(ANSITerminal), package(yojson), extension:mli, file:pokemon.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package yojson -package ANSITerminal -modules pokemon.mli > pokemon.mli.depends # cached
# Target: pokemon.cmi, tags: { package(ANSITerminal), package(yojson), byte, compile, extension:mli, file:pokemon.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package yojson -package ANSITerminal -o pokemon.cmi pokemon.mli # cached
# Target: battle.cmi, tags: { package(ANSITerminal), package(yojson), byte, compile, extension:mli, file:battle.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package yojson -package ANSITerminal -o battle.cmi battle.mli # cached
# Target: command.mli.depends, tags: { package(ANSITerminal), package(yojson), extension:mli, file:command.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package yojson -package ANSITerminal -modules command.mli > command.mli.depends # cached
# Target: command.cmi, tags: { package(ANSITerminal), package(yojson), byte, compile, extension:mli, file:command.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package yojson -package ANSITerminal -o command.cmi command.mli # cached
# Target: main.cmo, tags: { package(ANSITerminal), package(yojson), byte, compile, extension:cmo, extension:ml, file:main.cmo, file:main.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package yojson -package ANSITerminal -o main.cmo main.ml
# Target: battle.ml.depends, tags: { package(ANSITerminal), package(yojson), extension:ml, file:battle.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package yojson -package ANSITerminal -modules battle.ml > battle.ml.depends # cached
# Target: battle.cmo, tags: { package(ANSITerminal), package(yojson), byte, compile, extension:cmo, extension:ml, file:battle.cmo, file:battle.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package yojson -package ANSITerminal -o battle.cmo battle.ml # cached
# Target: command.ml.depends, tags: { package(ANSITerminal), package(yojson), extension:ml, file:command.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package yojson -package ANSITerminal -modules command.ml > command.ml.depends # cached
# Target: command.cmo, tags: { package(ANSITerminal), package(yojson), byte, compile, extension:cmo, extension:ml, file:command.cmo, file:command.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package yojson -package ANSITerminal -o command.cmo command.ml # cached
# Target: moves.ml.depends, tags: { package(ANSITerminal), package(yojson), extension:ml, file:moves.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package yojson -package ANSITerminal -modules moves.ml > moves.ml.depends # cached
# Target: moves.cmo, tags: { package(ANSITerminal), package(yojson), byte, compile, extension:cmo, extension:ml, file:moves.cmo, file:moves.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package yojson -package ANSITerminal -o moves.cmo moves.ml # cached
# Target: pokemon.ml.depends, tags: { package(ANSITerminal), package(yojson), extension:ml, file:pokemon.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package yojson -package ANSITerminal -modules pokemon.ml > pokemon.ml.depends # cached
# Target: pokemon.cmo, tags: { package(ANSITerminal), package(yojson), byte, compile, extension:cmo, extension:ml, file:pokemon.cmo, file:pokemon.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package yojson -package ANSITerminal -o pokemon.cmo pokemon.ml # cached
# Target: ptype.ml.depends, tags: { package(ANSITerminal), package(yojson), extension:ml, file:ptype.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package yojson -package ANSITerminal -modules ptype.ml > ptype.ml.depends # cached
# Target: ptype.cmo, tags: { package(ANSITerminal), package(yojson), byte, compile, extension:cmo, extension:ml, file:ptype.cmo, file:ptype.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -package yojson -package ANSITerminal -o ptype.cmo ptype.ml # cached
# Target: main.byte, tags: { package(ANSITerminal), package(yojson), byte, dont_link_with, extension:byte, file:main.byte, link, ocaml, program, quiet, traverse }
ocamlfind ocamlc -linkpkg -package yojson -package ANSITerminal ptype.cmo moves.cmo pokemon.cmo battle.cmo command.cmo main.cmo -o main.byte
# Compilation successful.
